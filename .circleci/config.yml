defaults: &defaults
  working_directory: ~/app

version: 2
jobs:
  build:
    <<: *defaults
    docker:
      - image: circleci/openjdk:11-jdk-browsers
    steps:
      - checkout
      - restore_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: gradle-cache-{{ checksum "build.gradle" }}
      - run: ./gradlew build
      - save_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
          paths:
          - /home/circleci/.gradle/wrapper
      - save_cache:
          key: gradle-cache-{{ checksum "build.gradle" }}
          paths:
          - /home/circleci/.gradle/caches
      - store_test_results:
          path: build/test-results/test
      - store_artifacts:
          path: build/reports/tests/test
      - persist_to_workspace:
          root: .
          paths:
            - build/libs
            - build.gradle

  integration_tests:
    working_directory: ~/app
    docker:
    - image: circleci/openjdk:11-jdk-browsers
    steps:
    - checkout
    - attach_workspace:
        at: ~/app
    - run:
        name: Run the java app.
        command: env spring.profiles.active=dev java -jar build/libs/oauth2server-*.jar
        background: true
    - run:
        name: Wait for java app to start
        command: sleep 15
    - restore_cache:
        key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
    - restore_cache:
        key: gradle-cache-{{ checksum "build.gradle" }}
    - run:
        name: Run Integration Tests
        command: ./gradlew testIntegration
    - save_cache:
        key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
        paths:
        - /home/circleci/.gradle/wrapper
    - save_cache:
        key: gradle-cache-{{ checksum "build.gradle" }}
        paths:
        - /home/circleci/.gradle/caches
    - store_artifacts:
        path: build/reports/tests/testIntegration
        destination: integration/spock
    - store_test_results:
        path: build/test-results/testIntegration

  build_docker:
    <<: *defaults
    docker:
      - image: circleci/node:8.11.1-browsers
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - setup_remote_docker
      - run:
          name: Build container and publish to docker hub
          command: |
            jar xvf build/libs/oauth2server-*.jar BOOT-INF/classes/META-INF/build-info.properties
            API_VERSION=$(grep 'build.version=' BOOT-INF/classes/META-INF/build-info.properties | awk -F= '{print $2}')
            rm BOOT-INF/classes/META-INF/build-info.properties

            # make up a good version name
            TAG=${API_VERSION}.${CIRCLE_BRANCH}
            if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
              TAG=${API_VERSION}
            fi

            # build the container
            docker build --rm=false . \
               --tag "mojdigitalstudio/nomis-oauth2-server:$TAG" \
               --label "maintainer=michael.willis@digital.justice.gov.uk" \
               --label "app.version=$TAG" \
               --label "build.version=$TAG" \
               --label "build.number=$CIRCLE_BUILD_NUM" \
               --label "build.url=$CIRCLE_BUILD_URL" \
               --label "build.gitref=$CIRCLE_SHA1"

            if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
              # publish to docker hub as the tag
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker push mojdigitalstudio/nomis-oauth2-server:$TAG
              docker tag mojdigitalstudio/nomis-oauth2-server:$TAG mojdigitalstudio/nomis-oauth2-server:latest
              docker push mojdigitalstudio/nomis-oauth2-server:latest
            fi

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - integration_tests:
          requires:
          - build
      - build_docker:
          requires:
            - integration_tests
