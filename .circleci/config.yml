defaults: &defaults
  working_directory: ~/app
  environment:
    _JAVA_OPTIONS: -Xmx256m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -XX:ParallelGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs=-XX:+UseContainerSupport

version: 2.1

orbs:
  owasp: entur/owasp@0.0.10

executors:
  builder:
    <<: *defaults
    docker:
      - image: circleci/openjdk:11-jdk-browsers

  deployer:
    <<: *defaults
    docker:
      - image: circleci/python:3

jobs:
  build:
    executor: builder
    steps:
      - checkout
      - restore_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: gradle-cache-{{ checksum "build.gradle" }}
      - run: ./gradlew build
      - save_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
          paths:
            - /home/circleci/.gradle/wrapper
      - save_cache:
          key: gradle-cache-{{ checksum "build.gradle" }}
          paths:
            - /home/circleci/.gradle/caches
      - store_test_results:
          path: build/test-results/test
      - store_artifacts:
          path: build/reports/tests/test
      - persist_to_workspace:
          root: .
          paths:
            - build/libs
            - build.gradle

  integration_tests:
    executor: builder
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Run the java app.
          command: env spring.profiles.active=dev java -Xmx256m -jar build/libs/oauth2server-*.jar
          background: true
      - run:
          name: Wait for java app to start
          command: sleep 20
      - restore_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: gradle-cache-{{ checksum "build.gradle" }}
      - run:
          name: Run Integration Tests
          command: ./gradlew testIntegration
      - run:
          name: Run Fluent Integration Tests
          command: ./gradlew testFluentIntegration
      - save_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
          paths:
            - /home/circleci/.gradle/wrapper
      - save_cache:
          key: gradle-cache-{{ checksum "build.gradle" }}
          paths:
            - /home/circleci/.gradle/caches
      - store_artifacts:
          path: build/reports/tests/testIntegration
          destination: integration/spock
      - store_artifacts:
          path: build/reports/tests/testFluentIntegration
          destination: integration/fluent
      - store_test_results:
          path: build/test-results

  build_docker:
    executor: deployer
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - setup_remote_docker
      - run:
          name: Build container and publish to docker hub
          command: |
            APP_VERSION=$(unzip -p build/libs/oauth2server-*.jar BOOT-INF/classes/META-INF/build-info.properties | awk -F = '/build.version/ {print $2}')

            # make up a good version name
            TAG=$([[ "${CIRCLE_BRANCH}" == "master" ]] && echo "$APP_VERSION" || echo "${APP_VERSION}.${CIRCLE_BRANCH}")
            echo "Setting app version to $TAG"

            DOCKER_IMAGE="mojdigitalstudio/nomis-oauth2-server"

            # build the container
            docker build --rm=false . \
               --tag "$DOCKER_IMAGE:$TAG" \
               --label "maintainer=michael.willis@digital.justice.gov.uk" \
               --label "app.version=$TAG" \
               --label "build.version=$TAG" \
               --label "build.number=$CIRCLE_BUILD_NUM" \
               --label "build.url=$CIRCLE_BUILD_URL" \
               --label "build.gitref=$CIRCLE_SHA1"

            if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
              # publish to docker hub as the tag
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker push $DOCKER_IMAGE:$TAG
              docker tag $DOCKER_IMAGE:$TAG $DOCKER_IMAGE:latest
              docker push $DOCKER_IMAGE:latest
            fi

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - integration_tests:
          requires:
            - build
      - build_docker:
          requires:
            - integration_tests
          filters:
            branches:
              only:
                - master
  scheduled:
    triggers:
      - schedule:
          cron: "0 7 * * 1-5"
          filters:
            branches:
              only:
                - master
    jobs:
      - owasp/gradle_owasp_dependency_check:
          executor: builder
