import org.springframework.boot.gradle.plugin.SpringBootPlugin

import java.time.Instant
import java.time.LocalDate

plugins {
  id 'java'
  id 'groovy'
  id 'org.springframework.boot' version '2.2.4.RELEASE'
  id 'io.spring.dependency-management' version '1.0.9.RELEASE'
  id 'org.owasp.dependencycheck' version '5.3.0'
  id 'com.github.ben-manes.versions' version '0.27.0'
  id 'org.jetbrains.kotlin.jvm' version '1.3.61'
}

def isNonStable = { String version ->
  def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
  def regex = /^[0-9,.v-]+(-r)?$/
  return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
  rejectVersionIf {
    isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
  }
}

repositories {
  mavenCentral()
  maven { url "https://dl.bintray.com/gov-uk-notify/maven" }
}

compileKotlin {
  kotlinOptions.jvmTarget = '11'
}

compileTestKotlin {
  kotlinOptions.jvmTarget = '11'
}

configurations {
  agentDeps
  agentDeps.transitive = false
}

ext {
  ext {
    drivers = ['chromeHeadless']
  }
}

dependencyCheck {
  failBuildOnCVSS = 5
  suppressionFiles = ['dependency-check-suppress-spring.xml']
  format = 'ALL'
  analyzers {
    assemblyEnabled = false
  }
}

group = 'uk.gov.justice.digital.hmpps'

def today = Instant.now()
def todaysDate = LocalDate.now().format('yyyy-MM-dd')
version = System.getenv('CI') ? "${todaysDate}.${System.getenv('CIRCLE_BUILD_NUM')}" : todaysDate

springBoot {
  buildInfo {
    properties {
      artifact = rootProject.name
      version = version
      group = group
      name = rootProject.name
      time = today
      additional = [
          by                   : System.properties['user.name'],
          operatingSystem      : "${System.properties['os.name']} (${System.properties['os.version']})",
          continuousIntegration: System.getenv('CI') ? true : false,
          machine              : InetAddress.localHost.hostName
      ]
    }
  }
}

dependencyManagement {
  imports {
    mavenBom(SpringBootPlugin.BOM_COORDINATES)
  }
}

dependencies {
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  annotationProcessor('org.projectlombok:lombok:1.18.10')

  implementation files('lib/ojdbc10-19.3.jar')
  implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
  implementation 'org.jetbrains.kotlin:kotlin-reflect'

  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.security:spring-security-jwt:1.1.0.RELEASE'
  implementation 'org.springframework.security.oauth:spring-security-oauth2:2.4.0.RELEASE'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'io.jsonwebtoken:jjwt:0.9.1'

  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.hibernate:hibernate-core'

  implementation 'net.logstash.logback:logstash-logback-encoder:6.3'
  implementation 'com.microsoft.azure:applicationinsights-spring-boot-starter:2.6.0-BETA'
  implementation 'com.microsoft.azure:applicationinsights-logging-logback:2.6.0-BETA'
  agentDeps 'com.microsoft.azure:applicationinsights-agent:2.6.0-BETA'
  implementation 'javax.annotation:javax.annotation-api:1.3.2'
  implementation 'javax.xml.bind:jaxb-api:2.3.1'
  implementation 'com.sun.xml.bind:jaxb-impl:2.3.2'
  implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
  implementation 'javax.activation:activation:1.1.1'

  implementation 'javax.transaction:javax.transaction-api:1.3'

  implementation 'io.springfox:springfox-swagger2:2.9.2'
  implementation 'io.springfox:springfox-swagger-ui:2.9.2'

  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
  implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.4.1'
  implementation 'uk.gov.service.notify:notifications-java-client:3.15.1-RELEASE'

  implementation 'org.flywaydb:flyway-core:6.2.1'
  implementation 'com.zaxxer:HikariCP:3.4.2'
  implementation 'org.apache.commons:commons-lang3:3.9'
  implementation 'org.apache.commons:commons-text:1.8'
  implementation 'com.microsoft.sqlserver:mssql-jdbc:8.2.0.jre11'
  implementation 'com.github.timpeeters:spring-boot-graceful-shutdown:2.2.0'
  implementation 'com.google.guava:guava:28.2-jre'

  implementation configurations.agentDeps

  runtime 'com.h2database:h2:1.4.200'
  runtime 'org.springframework.boot:spring-boot-devtools'

  compileOnly 'org.projectlombok:lombok:1.18.10'

  testAnnotationProcessor 'org.projectlombok:lombok:1.18.10'
  testCompileOnly 'org.projectlombok:lombok:1.18.10'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
  testRuntime 'com.h2database:h2:1.4.196'

  testImplementation 'org.codehaus.groovy:groovy-all:2.5.9'
  testImplementation 'org.spockframework:spock-spring:1.3-groovy-2.5'
  testImplementation('org.spockframework:spock-core:1.3-groovy-2.5') {
    exclude group: 'org.codehaus.groovy'
  }

  testImplementation 'org.gebish:geb-core:3.3'
  testImplementation 'org.gebish:geb-spock:3.3'
  testImplementation 'org.seleniumhq.selenium:selenium-support:3.141.59'
  testImplementation 'org.seleniumhq.selenium:selenium-chrome-driver:3.141.59'
  testImplementation 'org.seleniumhq.selenium:selenium-firefox-driver:3.141.59'
  testImplementation 'io.github.http-builder-ng:http-builder-ng-apache:1.0.4'

  testImplementation 'com.github.tomakehurst:wiremock-standalone:2.26.0'
  testImplementation 'com.github.tomjankes:wiremock-groovy:0.2.0'
  testImplementation 'org.slf4j:slf4j-api:1.7.30'
  testImplementation 'com.auth0:java-jwt:3.9.0'

  testImplementation 'net.javacrumbs.json-unit:json-unit-assertj:2.13.0'
  testImplementation 'com.nhaarman:mockito-kotlin-kt1.1:1.6.0'
}

task copyAgent(type: Copy) {
  from configurations.agentDeps
  into "$buildDir/libs"
}

assemble.dependsOn copyAgent

drivers.each { driver ->
  task "${driver}Test"(type: Test) {
    group JavaBasePlugin.VERIFICATION_GROUP

    outputs.upToDateWhen { false } // Always run tests

    systemProperty 'geb.build.reportsDir', reporting.file("geb/${name}")
    systemProperty 'geb.env', driver
  }
}

test {
  exclude '**/integration/*'
  useJUnitPlatform()
}

task testIntegration(type: Test) {
  include 'uk/gov/justice/digital/hmpps/oauth2server/integration/specs/*'

  maxHeapSize = "512m"
}
